// Require HMtai Library //
const hmtai = require('hmtai')
// Require Fetch Functions //
const hmlinks = require('./fetchAPI.js')

module.exports = class HM {
    // Manual on what libraries return //
    static Manual = 'Example For All Libraries: HMfull.HMtai.sfw.wallpaper() - { url: "link" }';

    static HMtai = { // HMtai Library //
        sfw: {
            wallpaper() {
                return { url: hmtai.wallpaper() }
            },
            mobileWallpaper() {
                return { url: hmtai.mobileWallpaper() }
            },
            neko() {
                return { url: hmtai.neko() }
            },
            jahy() {
                return { url: hmtai.jahy() }
            },
            slap() {
                return { url: hmtai.slap() }
            },
            lick() {
                return { url: hmtai.lick() }
            },
            depression() {
                return { url: hmtai.depression() }
            }
        },
        nsfw: {
            ass() {
                return { url: hmtai.nsfw.ass() }
            },
            bdsm() {
                return hmtai.nsfw.bdsm()
            },
            blowjob() {
                return { url: hmtai.nsfw.blowjob() }
            },
            boobjob() {
                return { url: hmtai.nsfw.boobjob() }
            },
            creampie() {
                return { url: hmtai.nsfw.creampie() }
            },
            cum() {
                return { url: hmtai.nsfw.cum() }
            },
            vagina() {
                return { url: hmtai.nsfw.vagina() }
            },
            uniform() {
                return { url: hmtai.nsfw.uniform() }
            },
            manga() {
                return { url: hmtai.nsfw.manga() }
            },
            foot() {
                return { url: hmtai.nsfw.foot() }
            },
            femdom() {
                return { url: hmtai.nsfw.femdom() }
            },
            gangbang() {
                return { url: hmtai.nsfw.gangbang() }
            },
            hentai() {
                return { url: hmtai.nsfw.hentai() }
            },
            incest() {
                return { url: hmtai.nsfw.incest() }
            },
            ahegao() {
                return { url: hmtai.nsfw.ahegao() }
            },
            neko() {
                return { url: hmtai.nsfw.nsfwNeko() }
            },
            gif() {
                return { url: hmtai.nsfw.gif() }
            },
            ero() {
                return { url: hmtai.nsfw.ero() }
            },
            cuckold() {
                return { url: hmtai.nsfw.cuckold() }
            },
            orgy() {
                return { url: hmtai.nsfw.orgy() }
            },
            elves() {
                return { url: hmtai.nsfw.elves() }
            },
            pantsu() {
                return { url: hmtai.nsfw.pantsu() }
            },
            nsfwMobileWallpaper() {
                return { url: hmtai.nsfw.nsfwMobileWallpaper() }
            },
            glasses() {
                return { url: hmtai.nsfw.glasses() }
            },
            tentacles() {
                return { url: hmtai.nsfw.tentacles() }
            },
            thighs() {
                return { url: hmtai.nsfw.thighs() }
            },
            yuri() {
                return { url: hmtai.nsfw.yuri() }
            },
            zettaiRyouiki() {
                return { url: hmtai.nsfw.zettaiRyouiki() }
            },
            masturbation() {
                return { url: hmtai.nsfw.masturbation() }
            },
            public() {
                return { url: hmtai.nsfw.public() }
            }
        }
    }

    static Nekos = { // Nekos REST API //
        ball8() {
            return hmlinks.nekosGet('8ball')
        },
        sfw: {
            slap() {
                return hmlinks.nekosGet('slap')
            },
            pat() {
                return hmlinks.nekosGet('pat')
            },
            neko() {
                return hmlinks.nekosGet('neko')
            },
            kiss() {
                return hmlinks.nekosGet('kiss')
            },
            hug() {
                return hmlinks.nekosGet('hug')
            },
            feed() {
                return hmlinks.nekosGet('feed')
            },
            cuddle() {
                return hmlinks.nekosGet('cuddle')
            },
            smug() {
                return hmlinks.nekosGet('smug')
            },
            tickle() {
                return hmlinks.nekosGet('tickle')
            },
            foxgirl() {
                return hmlinks.nekosGet('fox_girl')
            },
            waifu() {
                return hmlinks.nekosGet('waifu')
            }
        },
        nsfw: {
            nekogif() {
                return hmlinks.nekosGet('ngif')
            },
            wallpaper() {
                return hmlinks.nekosGet('wallpaper')
            }
        }
    }

    static NekoLove = { // Neko-Love REST API //
        sfw: {
            pat() {
                return hmlinks.nekoloveGet('pat')
            },
            hug() {
                return hmlinks.nekoloveGet('hug')
            },
            kiss() {
                return hmlinks.nekoloveGet('kiss')
            },
            cry() {
                return hmlinks.nekoloveGet('cry')
            },
            slap() {
                return hmlinks.nekoloveGet('slap')
            },
            smug() {
                return hmlinks.nekoloveGet('smug')
            },
            punch() {
                return hmlinks.nekoloveGet('punch')
            },
            neko() {
                return hmlinks.nekoloveGet('neko')
            },
            kitsune() {
                return hmlinks.nekoloveGet('kitsune')
            },
            waifu() {
                return hmlinks.nekoloveGet('waifu')
            }
        },
        nsfw: {
            nekolewd() {
                return hmlinks.nekoloveGet('nekolewd')
            }
        }
    }

    static NekoBot = { // NekoBot REST API //
        sfw: {
            kanna() {
                return hmlinks.nekobotGet('kanna')
            },
            neko() {
                return hmlinks.nekobotGet('neko')
            },
            holo() {
                return hmlinks.nekobotGet('holo')
            },
            kemonomimi() {
                return hmlinks.nekobotGet('kemonomimi')
            },
            coffee() {
                return hmlinks.nekobotGet('coffee')
            },
            gah() {
                return hmlinks.nekobotGet('gah')
            }
        },
        nsfw: {
            hentai() {
                return hmlinks.nekobotGet('hentai')
            },
            hass() {
                return hmlinks.nekobotGet('hass')
            },
            boobs() {
                return hmlinks.nekobotGet('hboobs')
            },
            paizuri() {
                return hmlinks.nekobotGet('paizuri')
            },
            yuri() {
                return hmlinks.nekobotGet('hyuri')
            },
            thigh() {
                return hmlinks.nekobotGet('hthigh')
            },
            lewdneko() {
                return hmlinks.nekobotGet('lewdneko')
            },
            midriff() {
                return hmlinks.nekobotGet('hmidriff')
            },
            kitsune() {
                return hmlinks.nekobotGet('hkitsune')
            },
            tentacle() {
                return hmlinks.nekobotGet('tentacle')
            },
            anal() {
                return hmlinks.nekobotGet('hentai_anal')
            },
            hanal(){
                return hmlinks.nekobotGet('hanal')
            },
            hneko() {
                return hmlinks.nekobotGet('nheko')
            }
        }
    }

    // We don't know which categories will be active, so we hide this source until API will start 
    // static Freaker = { // ComputerFreaker REST API //
    //     sfw: {
    //         baguette() {
    //             return hmlinks.freakerGet('baguette')
    //         },
    //         dva() {
    //             return hmlinks.freakerGet('dva')
    //         },
    //         neko() {
    //             return hmlinks.freakerGet('neko')
    //         },
    //         yuri() {
    //             return hmlinks.freakerGet('yuri')
    //         },
    //         anime() {
    //             return hmlinks.freakerGet('anime')
    //         }
    //     },
    //     nsfw: {
    //         hentai() {
    //             return hmlinks.freakerGet('hentai')
    //         },
    //         neko() {
    //             return hmlinks.freakerGet('nsfwneko')
    //         },
    //         trap() {
    //             return hmlinks.freakerGet('trap')
    //         }
    //     }
    // }
}